name: publish release with maven

on:
  pull_request:
    branches: [master, main]
    types: [closed]
  push:
    branches: [master, main]

env:
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'temurin'
  JRE_VERSION: '21.0.1'
  GITHUB_TOKEN: ${{ github.token }}
  ARTIFACT_NAME: 'LauncherJarLibgdxExample'
  USER_NAME: ${{ github.actor }}
  USER_EMAIL: ${{ github.actor }}@users.noreply.github.com
  UUID: 'e1caab6b-1230-4691-a880-dd2d0b8ebb98'

jobs:
  releaseJob:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.version.outputs.content }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        java-version: ${{ env.JAVA_VERSION }}

    # If version.md does not exist read the version from gradle.properties
    - name: Update version.md from gradle.properties
      shell: pwsh
      run: |
        if (!(Test-Path "version.md")) {
          $version = Get-Content gradle.properties | Select-String -Pattern 'projectVersion='
          $version = $version -replace 'projectVersion=', ''
          $version | Set-Content -NoNewline -Path version.md
        }

    - name: Read version.md
      id: version
      uses: juliangruber/read-file-action@v1
      with:
        path: version.md

    - name: create release
      shell: pwsh
      run: |
        echo "Move version.md to resources and create CHANGELOG.md if not exist"
        if (!(Test-Path "src/main/resources")) {
          mkdir src/main/resources
        }
        cp version.md src/main/resources/
        if (!(Test-Path "CHANGELOG*")) {
          New-Item CHANGELOG.md
        }
        echo "Build and move to root with desired name"
        chmod 777 gradlew
        ./gradlew jar -Pversion='${{ steps.version.outputs.content }}'
        # For liftoff project (The new default libgdx project setup tool)
        $full_path = ./gradlew printJarPath | Select-String "Logged.*" | ForEach-Object { ($_ -split ":")[1].Trim() }
        echo "JAR PATH : $full_path"
        mv $full_path FragmentOfTheAbyss.jar
        # For the previous libgdx project setup tool
        # mv desktop/build/libs/*.jar ${{ env.ARTIFACT_NAME }}.jar
        ls

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.content }}
        tag_name: ${{ steps.version.outputs.content }}
        body_path: CHANGELOG.md
    - name: upload .jar artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.ARTIFACT_NAME }}.jar
        asset_name: ${{ env.ARTIFACT_NAME }}.jar
        asset_content_type: application/jar
    - name: LauncherJar
      uses: HydrolienF/LauncherJar@0.3.6
      with:
        project-name: ${{ env.ARTIFACT_NAME }}
        user-name: ${{ env.USER_NAME }}
        launcher-jar-version: 0.3.6
        GITHUB_TOKEN: ${{ github.token }}
        release-url: ${{ steps.create_release.outputs.upload_url }}
        app-version: ${{ steps.version.outputs.content }}
        launcher-extension: 'jar'
        JRE_VERSION: ${{ env.JRE_VERSION }}

  LauncherJar:
    name: 'LauncherJar ${{ matrix.os }} ${{ matrix.launcher-extension }}'
    strategy:
      fail-fast: false
      matrix:
        launcher-extension: [ deb, rpm, exe, msi, dmg, pkg ]
        include:
          - launcher-extension: deb
            os: ubuntu-latest
          - launcher-extension: rpm
            os: ubuntu-latest
          - launcher-extension: exe
            os: windows-latest
          - launcher-extension: msi
            os: windows-latest
          - launcher-extension: dmg
            os: macos-latest
          - launcher-extension: pkg
            os: macos-latest
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    needs: releaseJob
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: LauncherJar
      uses: HydrolienF/LauncherJar@0.3.6
      with:
        project-name: ${{ env.ARTIFACT_NAME }}
        user-name: ${{ env.USER_NAME }}
        launcher-jar-version: 0.3.6
        GITHUB_TOKEN: ${{ github.token }}
        release-url: ${{ needs.releaseJob.outputs.upload_url }}
        app-version: ${{ needs.releaseJob.outputs.version }}
        launcher-extension: ${{ matrix.launcher-extension }}
        uuid: ${{ env.UUID }}
        JRE_VERSION: ${{ env.JRE_VERSION }}
        deb-maintainer-email: ${{ env.USER_EMAIL }}
